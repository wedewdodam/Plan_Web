@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Logs/Logout" asp-route-returnUrl="@Url.Action("LogOut", "Logs", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>*@
        </li>
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-page="/Admin/Index" asp-route-returnUrl="@Url.Action("Admin", "Index")">관리자</a>*@
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">교육생</a>
        </li>
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-page="/Admin/Index" asp-route-returnUrl="@Url.Action("Admin", "Index")">관리자</a>*@
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">관리자</a>
        </li>
    }
</ul>