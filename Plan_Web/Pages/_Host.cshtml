@page "/"
@namespace Plan_Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>장기수선계획 운영시스템</title>
    <base href="~/" />
    <link rel="stylesheet" href="~/css/bootstrap/bootstrap.min.css" />
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/icons-1.3.0/font/bootstrap-icons.css" rel="stylesheet" />
    <script src="~/lib/blazor.polyfill.min.js"></script>
    <link href="~/Plan_Web.styles.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui.css" rel="stylesheet" />
    <link href="~/css/footer.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script src="~/lib/jquery.js"></script>
    <script src="~/lib/dist/js/bootstrap.js"></script>
    <script src="~/lib/jquery-ui.js"></script>
    <script src="~/js/iFreme.js"></script>
    @*[3] _Host에 CKEditor CDN 적용*@
    <script src="https://cdn.ckeditor.com/4.14.1/standard/ckeditor.js"></script>
    <script src="~/js/CkEditorFour.js"></script>

    <script type="text/javascript">
        function setModalDraggableAndResizable() {
            $('.modal-content').resizable({
                //alsoResize: ".modal-dialog",
                minHeight: 300,
                minWidth: 300
            });
            $('.modal-dialog').draggable();
        }
    </script>

    <script>
        //팝업 메세지 구현
        window.exampleJsFunctions =
        {
            ShowMsg: function (message) {
                window.alert(message);
            }
        };
    </script>

    <script>
        // 넘어온 ID를 갖는 모달 창 닫기
        //function closeModal(modalId) {
        //    //console.log("삭제");
        //    $("#" + modalId).modal('hide');
        //}

        // 넘어온 ID를 갖는 모달 창 열기
        //function showModal(modalId) {
        //    $("#" + modalId).modal('show');
        //}

        $('.modal-dialog').draggable({ handle: ".modal-header" });

        //$("#subInputB").draggable({
        //    handle: ".modal-header"
        //});
    </script>
    <script>
        window.SetFocusToElement = (element) => {
            element.focus();
        };
    </script>

    <script>
        // 사이드 메뉴 선택시 해당 메뉴를 active 상태로 변경
        $(function () {
            $("#layoutSidenav_nav .sb-sidenav a.nav-link").on("click", function (e) {
                $(".nav-link").removeClass("active");
                $(this).addClass("active");
            });
            $(".navbar-brand").on("click", function (e) {
                $(".nav-link").removeClass("active");
                $("#lnkDashboard").addClass("active");
            });
        });
    </script>

    <script>
        window.blazorjs = {
            dragable: function () {
                dragElement(document.getElementById("mydiv"));

                function dragElement(elmnt) {
                    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
                    if (document.getElementById(elmnt.id + "header")) {
                        /* if present, the header is where you move the DIV from:*/
                        document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
                    } else {
                        /* otherwise, move the DIV from anywhere inside the DIV:*/
                        elmnt.onmousedown = dragMouseDown;
                    }

                    function dragMouseDown(e) {
                        e = e || window.event;
                        e.preventDefault();
                        // get the mouse cursor position at startup:
                        pos3 = e.clientX;
                        pos4 = e.clientY;
                        document.onmouseup = closeDragElement;
                        // call a function whenever the cursor moves:
                        document.onmousemove = elementDrag;
                    }

                    function elementDrag(e) {
                        e = e || window.event;
                        e.preventDefault();
                        // calculate the new cursor position:
                        pos1 = pos3 - e.clientX;
                        pos2 = pos4 - e.clientY;
                        pos3 = e.clientX;
                        pos4 = e.clientY;
                        // set the element's new position:
                        elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
                        elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
                    }

                    function closeDragElement() {
                        /* stop moving when mouse button is released:*/
                        document.onmouseup = null;
                        document.onmousemove = null;
                    }
                }
            }
        }
    </script>
</body>
</html>
